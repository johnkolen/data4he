require 'rails_helper'

# This spec was generated by rspec-rails when you ran the scaffold generator.
# It demonstrates how one might use RSpec to test the controller code that
# was generated by Rails when you ran the scaffold generator.
#
# It assumes that the implementation code is generated by the rails scaffold
# generator. If you are using any extension libraries to generate different
# controller code, this generated spec may or may not pass.
#
# It only uses APIs available in rails and/or rspec-rails. There are a number
# of tools you can use to make these specs even more expressive, but we're
# sticking to rails and rspec-rails APIs to keep things simple and stable.

RSpec.describe "/story_tasks", type: :request do
  requestSetup object: :create_story_task,
               objects: [:create_story_task_sample,
                         :create_story_task_sample],
               user: :admin_user

  # This should return the minimal set of attributes required to create a valid
  # StoryTask. As you add validations to StoryTask, be sure to
  # adjust the attributes here as well.

  let(:valid_attributes) {
    [
      build(:story_task_sample).to_params,
      build(:story_task_sample, :with_story_note).to_params
    ]
  }

  let(:invalid_attributes) {
    build(:story_task_sample).to_params title: ""
  }

  let(:new_attributes) {
    { title: "New Title",
      description: "New Description"
    }
  }

  # covers basic testing of standard routes
  requests_get_index
  requests_get_show
  requests_get_new
  requests_get_edit
  requests_post_create
  requests_patch_update
  requests_delete_destroy

end
